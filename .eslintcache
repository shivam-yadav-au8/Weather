[{"/home/neosky/shivam/deploy/Weather/src/reportWebVitals.js":"1","/home/neosky/shivam/deploy/Weather/src/components/Main.jsx":"2"},{"size":362,"mtime":1672300897208,"results":"3","hashOfConfig":"4"},{"size":3595,"mtime":1672300897208,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s5tg3g",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/home/neosky/shivam/deploy/Weather/src/reportWebVitals.js",[],"/home/neosky/shivam/deploy/Weather/src/components/Main.jsx",["11","12","13"],"import React, { Component } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n} from '@fortawesome/free-solid-svg-icons';\nimport './Main.scss';\nclass Main extends Component {\n    state = {\n        city:'',\n        wdata:[],\n        date: moment().format(\"DD-MM-YYYY hh:mm:ss\")\n    }\n    \n    componentDidUpdate(prevprops,prevstate)\n    {\n        // console.log(prevstate);\n        if(prevstate.city!=this.state.city)\n        {\n            axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=55bd7a68fa4fe1a14faac35d7618fb00&units=metric`).then(res=>this.setState({wdata:res.data})).catch(err=>console.log(err));\n        }\n    }\n    handleChange=(e)=>{\n        e.preventDefault();\n        this.setState({city:e.target.value});\n    }\n    handleSubmit=(e)=>\n    {\n        e.preventDefault();\n        console.log(\"clicked\");\n        this.setState({fcity:this.state.city});\n    }\n    render() { \n        let weatherIcon = null;\n    if(this.state.wdata.length!=0)\n    {\n    if (this.state.wdata.weather[0].main === 'Thunderstorm') {\n      weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n    } else if (this.state.wdata.weather[0].main === 'Drizzle') {\n      weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n    } else if (this.state.wdata.weather[0].main === 'Rain') {\n      weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n    } else if (this.state.wdata.weather[0].main === 'Snow') {\n      weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n    } else if (this.state.wdata.weather[0].main === 'Clear') {\n      weatherIcon = <FontAwesomeIcon icon={faSun} />;\n    } else if (this.state.wdata.weather[0].main=== 'Clouds') {\n      weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n    } else {\n      weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n    }\n}\n        console.log(this.state.wdata);\n        return (<div className=\"whole\">\n            <h1 className=\"title\">weather Aplication</h1>\n            <input className=\"inp\" onChange={this.handleChange}  value={this.state.city} type=\"text\" placeholder=\"enter the city name\"></input>\n            {this.state.wdata.length!=0?<div className=\"wrapper\">\n                <div className=\"location\">\n                <h1>{this.state.wdata.name},{this.state.wdata.sys.country}</h1>\n                <h3>{this.state.date}</h3>\n                <div className=\"large\">\n        <div id=\"icon\">{weatherIcon}</div><div className=\"temp\">\n                {this.state.wdata.main.temp}&#176; \n                </div>\n                </div>\n                </div>\n                <div class=\"right\">\n                    <div className=\"top\">\n            <div class=\"data\">\n        <div><label htmlFor=\"lat\">lat:</label>{this.state.wdata.coord.lat}</div>\n        <div> <label htmlFor=\"lat\">speed:</label>{this.state.wdata.wind.speed}mph</div>\n        <div> <label htmlFor=\"lat\">sunrise:</label>{this.state.wdata.sys.sunrise}</div>\n        </div>\n        </div>\n        <div className=\"bottom\">\n            <div className=\"data\">\n        <div><label htmlFor=\"lat\">long:</label>{this.state.wdata.coord.lon}</div>\n        <div><label htmlFor=\"lat\">climate:</label>{this.state.wdata.weather[0].description}</div>\n        <div><label htmlFor=\"lat\">sunset:</label>{this.state.wdata.sys.sunset}</div>\n        </div>\n        </div>\n                </div>\n            </div>:<div></div>}\n        </div>  );\n    }\n}\n \nexport default Main;",{"ruleId":"14","severity":1,"message":"15","line":25,"column":26,"nodeType":"16","messageId":"17","endLine":25,"endColumn":28},{"ruleId":"14","severity":1,"message":"15","line":42,"column":31,"nodeType":"16","messageId":"17","endLine":42,"endColumn":33},{"ruleId":"14","severity":1,"message":"15","line":64,"column":37,"nodeType":"16","messageId":"17","endLine":64,"endColumn":39},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]